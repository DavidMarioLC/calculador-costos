{"version":3,"sources":["components/Error.jsx","components/Form.jsx","components/ItemList.jsx","components/helpers/ColorRestante.js","components/FormGastos.jsx","components/App.js","serviceWorker.js","index.js"],"names":["Error","text","className","Form","guardarMontoAgregado","guardarRestante","setMostrarFormularioMonto","useState","monto","guardarMonto","error","guardarError","onSubmit","e","preventDefault","isNaN","value","onChange","parseInt","target","name","type","placeholder","ItemList","key","nombreGasto","montoGasto","colorRestante","presupuesto","restante","console","log","FormGastos","listaGastos","montoAgregado","guardarGasto","guardarCrearGasto","guardarNombreGasto","actualizarMontoGasto","errorNombreMonto","setErrorNombreMonto","errorMontoGasto","setErrorMontoGasto","trim","gasto","id","uuidv4","disabled","length","map","item","App","mostrarFormularioMonto","guardarItemGasto","crearGasto","useEffect","calculandoRestante","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"mNAMeA,EAJD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACV,uBAAGC,UAAU,SAASD,IC6CXE,EA5CF,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,qBAAsBC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,0BAAgC,EAErDC,mBAAS,GAF4C,mBAE5EC,EAF4E,KAErEC,EAFqE,OAGrDF,oBAAS,GAH4C,mBAG5EG,EAH4E,KAGrEC,EAHqE,KAyBnF,OACI,0BAAMT,UAAU,OAAOU,SAhBJ,SAAAC,GACnBA,EAAEC,iBAGEN,GAAS,GAAKO,MAAMP,GACpBG,GAAa,IAGjBA,GAAa,GAEbP,EAAqBI,GACrBH,EAAgBG,GAChBF,GAA0B,MAKtB,yBAAKJ,UAAU,cACX,2BAAOA,UAAU,qBAAjB,uCACA,2BAAOc,MAAOR,EAAOS,SAxBZ,SAAAJ,GACjB,IAAML,EAAQU,SAASL,EAAEM,OAAOH,MAAO,IACvCP,EAAaD,IAsBwCY,KAAK,QAAQlB,UAAU,oBAAoBmB,KAAK,SAASC,YAAY,YACjHZ,GAAS,kBAAC,EAAD,CAAOT,KAAM,wCAE3B,4BAAQC,UAAU,qBAAqBmB,KAAK,UAA5C,wB,QCzBGE,EATE,SAAC,GAAqC,EAAnCC,IAAoC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAClC,OACI,yBAAKxB,UAAU,6BACX,2BAAIuB,GACJ,iCAAOC,KCNNC,EAAgB,SAACC,EAAaC,GAYvC,OAXAC,QAAQC,IAAIH,EAAaC,GAGrBD,EAAc,EAAIC,EACV,aACDD,EAAc,EAAIC,EACjB,gBAEA,ICgFDG,EAlFI,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,YAAaC,EAA+D,EAA/DA,cAAeL,EAAgD,EAAhDA,SAAUM,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAAwB,EAEpD7B,mBAAS,IAF2C,mBAEvFkB,EAFuF,KAE1EY,EAF0E,OAGnD9B,mBAAS,GAH0C,mBAGvFmB,EAHuF,KAG3EY,EAH2E,OAK9C/B,oBAAS,GALqC,mBAKvFgC,EALuF,KAKrEC,EALqE,OAMhDjC,oBAAS,GANuC,mBAMvFkC,EANuF,KAMtEC,EANsE,KAoC9F,OACI,yBAAKxC,UAAU,uBACX,yBAAKA,UAAU,qBACX,0BAAMU,SAhCG,SAAAC,GAIjB,GAHAA,EAAEC,iBAGEY,EAAa,GAAKX,MAAMW,GACxBgB,GAAmB,QAGlB,GAA2B,KAAvBjB,EAAYkB,OAAhB,CAILH,GAAoB,GACpBE,GAAmB,GAEnB,IAAME,EAAQ,CACVnB,cACAC,aACAmB,GAAIC,eAKRX,EAAaS,GACbR,GAAkB,GAElBC,EAAmB,IACnBC,EAAqB,QAlBjBE,GAAoB,KAwBZ,yBAAKtC,UAAU,gBACX,2BAAOA,UAAU,qBAAjB,oBACA,2BAAOe,SAAU,SAACJ,GAAD,OAAOwB,EAAmBxB,EAAEM,OAAOH,QAAQA,MAAOS,EAAaL,KAAK,cAAclB,UAAU,oBAAoBmB,KAAK,OAAOC,YAAY,sBACxJiB,GAAoB,kBAAC,EAAD,CAAOtC,KAAM,6BAEtC,yBAAKC,UAAU,gBACX,2BAAOA,UAAU,qBAAjB,kBACA,2BAAOe,SAAU,SAACJ,GAAD,OAAOyB,EAAqBpB,SAASL,EAAEM,OAAOH,SAASA,MAAOU,EAAYN,KAAK,aAAalB,UAAU,oBAAoBmB,KAAK,SAASC,YAAY,YACpKmB,GAAmB,kBAAC,EAAD,CAAOxC,KAAM,6BAEvB,IAAb4B,EACG,4BAAQkB,UAAQ,EAAC7C,UAAU,6BAA6BmB,KAAK,UAA7D,+BAEA,4BAAQnB,UAAU,qBAAqBmB,KAAK,UAA5C,mBAIZ,yBAAKnB,UAAU,sBACX,yBAAKA,UAAU,uBACX,uBAAGA,UAAU,eAAb,kBAA0C,qCAAWgC,IACrD,8CAAmB,4BAAQhC,UAAWyB,EAAcO,EAAeL,IAAhD,KAA8DA,KAEpFI,EAAYe,QAAU,GACnB,uBAAG9C,UAAU,SAAb,4BAEH+B,EAAYgB,KAAI,SAAAC,GAAI,OACjB,kBAAC,EAAD,CAAU1B,IAAK0B,EAAKL,GAAIpB,YAAayB,EAAKzB,YAAaC,WAAYwB,EAAKxB,mBCxB7EyB,EA9CH,WAAO,IAAD,EAE8B5C,mBAAS,GAFvC,mBAET2B,EAFS,KAEM9B,EAFN,OAGoBG,mBAAS,GAH7B,mBAGTsB,EAHS,KAGCxB,EAHD,OAI4CE,oBAAS,GAJrD,mBAIT6C,EAJS,KAIe9C,EAJf,OAMwBC,mBAAS,IANjC,mBAMT0B,EANS,KAMIoB,EANJ,OAQc9C,mBAAS,IARvB,mBAQTqC,EARS,KAQFT,EARE,OASwB5B,oBAAS,GATjC,mBAST+C,EATS,KASGlB,EATH,KA4BhB,OAjBAmB,qBAAU,WACR,GAAID,EAAY,CACdD,EAAiB,GAAD,mBACXpB,GADW,CAEdW,KAIF,IAAMY,EAAqB3B,EAAWe,EAAMlB,WAC5CI,QAAQC,IAAIyB,GACZnD,EAAgBmD,MAGjB,CAACZ,IAKF,yBAAK1C,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,eAAd,wBAECkD,EACC,kBAAC,EAAD,CAAMhD,qBAAsBA,EAAsBC,gBAAiBA,EAAiBC,0BAA2BA,IAE/G,kBAAC,EAAD,CAAY6B,aAAcA,EAAcC,kBAAmBA,EAAmBF,cAAeA,EAAeL,SAAUA,EAAUI,YAAaA,QC5BrIwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/D,GACLoB,QAAQpB,MAAMA,EAAMgE,a","file":"static/js/main.ffd7f31c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Error = ({ text }) => (\r\n    <p className=\"error\">{text}</p>\r\n)\r\n\r\nexport default Error\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Error from '../components/Error'\r\n\r\nconst Form = ({ guardarMontoAgregado, guardarRestante, setMostrarFormularioMonto }) => {\r\n\r\n    const [monto, guardarMonto] = useState(0)\r\n    const [error, guardarError] = useState(false)\r\n\r\n    const definirMonto = e => {\r\n        const monto = parseInt(e.target.value, 10);\r\n        guardarMonto(monto)\r\n    }\r\n\r\n    const registrarMonto = e => {\r\n        e.preventDefault()\r\n\r\n        //validad\r\n        if (monto <= 0 || isNaN(monto)) {\r\n            guardarError(true)\r\n            return;\r\n        }\r\n        guardarError(false)\r\n        //enviar\r\n        guardarMontoAgregado(monto)\r\n        guardarRestante(monto)\r\n        setMostrarFormularioMonto(false)\r\n\r\n    }\r\n    return (\r\n        <form className=\"form\" onSubmit={registrarMonto}>\r\n            <div className=\"form__item\">\r\n                <label className=\"form__item--label\">Escribe el monto con el que cuentas</label>\r\n                <input value={monto} onChange={definirMonto} name=\"monto\" className=\"form__item--input\" type=\"number\" placeholder=\"S/00.00\" />\r\n                {error && <Error text={\"Por favor ingrese un monto valido.\"} />}\r\n            </div>\r\n            <button className=\"form__item--button\" type=\"submit\">Registrar tu monto</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    guardarMontoAgregado: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    setMostrarFormularioMonto: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst ItemList = ({ key, nombreGasto, montoGasto }) => {\r\n    return (\r\n        <div className=\"description__list--gastos\">\r\n            <p>{nombreGasto}</p>\r\n            <p>S/ {montoGasto}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList\r\n","export const colorRestante = (presupuesto, restante) => {\r\n    console.log(presupuesto, restante);\r\n    let clase;\r\n\r\n    if (presupuesto / 4 > restante) {\r\n        clase = \"color__red\"\r\n    } else if (presupuesto / 2 > restante) {\r\n        clase = \"color__orange\"\r\n    } else {\r\n        clase = \"\"\r\n    }\r\n\r\n    return clase;\r\n}","import React, { useState } from 'react'\r\n// import shortid from 'shortid'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types'\r\nimport Error from '../components/Error'\r\nimport ItemList from '../components/ItemList'\r\nimport { colorRestante } from './helpers/ColorRestante'\r\nconst FormGastos = ({ listaGastos, montoAgregado, restante, guardarGasto, guardarCrearGasto }) => {\r\n\r\n    const [nombreGasto, guardarNombreGasto] = useState('')\r\n    const [montoGasto, actualizarMontoGasto] = useState(0)\r\n\r\n    const [errorNombreMonto, setErrorNombreMonto] = useState(false)\r\n    const [errorMontoGasto, setErrorMontoGasto] = useState(false)\r\n    const agregarGasto = e => {\r\n        e.preventDefault()\r\n\r\n        //validar\r\n        if (montoGasto < 1 || isNaN(montoGasto)) {\r\n            setErrorMontoGasto(true);\r\n            return;\r\n        }\r\n        else if (nombreGasto.trim() === '') {\r\n            setErrorNombreMonto(true)\r\n            return;\r\n        }\r\n        setErrorNombreMonto(false)\r\n        setErrorMontoGasto(false)\r\n        //construir gasto\r\n        const gasto = {\r\n            nombreGasto,\r\n            montoGasto,\r\n            id: uuidv4()\r\n        }\r\n\r\n        //pasar el gasto al componente principal\r\n        // guardarNuevoGasto(gasto)\r\n        guardarGasto(gasto)\r\n        guardarCrearGasto(true)\r\n        //reset del form\r\n        guardarNombreGasto('')\r\n        actualizarMontoGasto(0)\r\n    }\r\n    return (\r\n        <div className=\"gastos__description\">\r\n            <div className=\"form gastos__form\">\r\n                <form onSubmit={agregarGasto}>\r\n                    <div className=\"gastos__item\">\r\n                        <label className=\"form__item--label\">Nombre del gasto</label>\r\n                        <input onChange={(e) => guardarNombreGasto(e.target.value)} value={nombreGasto} name=\"nombreGasto\" className=\"form__item--input\" type=\"text\" placeholder=\" nombre del gasto\" />\r\n                        {errorNombreMonto && <Error text={\"Agrega en que gastaras.\"} />}\r\n                    </div>\r\n                    <div className=\"gastos__item\">\r\n                        <label className=\"form__item--label\">Monto a gastar</label>\r\n                        <input onChange={(e) => actualizarMontoGasto(parseInt(e.target.value))} value={montoGasto} name=\"montoGasto\" className=\"form__item--input\" type=\"number\" placeholder=\"S/00.00\" />\r\n                        {errorMontoGasto && <Error text={\"Agrega un monto valido.\"} />}\r\n                    </div>\r\n                    {restante === 0 ?\r\n                        <button disabled className=\"form__item--button-agotado\" type=\"submit\">Has agotado tu presupuesto.</button>\r\n                        :\r\n                        <button className=\"form__item--button\" type=\"submit\">Agregar gasto</button>\r\n                    }\r\n                </form>\r\n            </div>\r\n            <div className=\" description__list\">\r\n                <div className=\"description__header\">\r\n                    <p className=\"monto__init\">Monto inicial: <strong>S/{montoAgregado}</strong></p>\r\n                    <p>Monto restante: <strong className={colorRestante(montoAgregado, restante)}>S/{restante}</strong></p>\r\n                </div>\r\n                {listaGastos.length <= 0 &&\r\n                    <p className=\"empty\">No hay gastos agregados.</p>}\r\n\r\n                {listaGastos.map(item => (\r\n                    <ItemList key={item.id} nombreGasto={item.nombreGasto} montoGasto={item.montoGasto} />\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFormGastos.propTypes = {\r\n    listaGastos: PropTypes.array.isRequired,\r\n    montoAgregado: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired,\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FormGastos\r\n","import React, { useState, useEffect } from 'react';\nimport Form from '../components/Form'\nimport FormGastos from '../components/FormGastos'\nconst App = () => {\n\n  const [montoAgregado, guardarMontoAgregado] = useState(0)\n  const [restante, guardarRestante] = useState(0)\n  const [mostrarFormularioMonto, setMostrarFormularioMonto] = useState(true)\n\n  const [listaGastos, guardarItemGasto] = useState([])\n\n  const [gasto, guardarGasto] = useState({})\n  const [crearGasto, guardarCrearGasto] = useState(false)\n\n  useEffect(() => {\n    if (crearGasto) {\n      guardarItemGasto([\n        ...listaGastos,\n        gasto\n      ])\n\n      //caculando restante\n      const calculandoRestante = restante - gasto.montoGasto;\n      console.log(calculandoRestante);\n      guardarRestante(calculandoRestante)\n\n    }\n  }, [gasto])\n\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"wrapper\">\n        <div className=\"form__content\">\n          <h1 className=\"form__title\">Calculador de gastos</h1>\n\n          {mostrarFormularioMonto ?\n            <Form guardarMontoAgregado={guardarMontoAgregado} guardarRestante={guardarRestante} setMostrarFormularioMonto={setMostrarFormularioMonto} />\n            :\n            <FormGastos guardarGasto={guardarGasto} guardarCrearGasto={guardarCrearGasto} montoAgregado={montoAgregado} restante={restante} listaGastos={listaGastos} />\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}